import Head from "next/head";
import { useRouter } from "next/router";
import React, { useState, useEffect } from "react";
let BASE_API_URI = process.env.NEXT_PUBLIC_BASE_API_URI as string;

export default function Product() {
  const router = useRouter();
  const { id } = router.query;
  const [product, setProduct] = useState<Product>();
  const [productColors, setProductColors] = useState<Color[]>([]);
  const [productSizes, setProductSize] = useState<Size[]>([]);
  const [availableColors, setAvailableColors] = useState<String[]>([]);
  const [availableSizes, setAvailableSizes] = useState<String[]>([]);

  const [loading, setLoading] = useState(true);


  const fetchProduct = async () => {
    const response = await fetch(`${BASE_API_URI}/products/${id}`)
    const data: Product = await response.json();
    setProduct(data);
    setLoading(false);
  }


  useEffect(() => {
    if (id === undefined) return;
    fetchProduct();
  }, [id]);

  useEffect(() => {
    let colors: Color[] = [];
    let sizes: Size[] = [];
    product?.variants.forEach((v) => {
      if (colors.findIndex((c) => c.id === v.color.id) === -1) {
        colors.push(v.color);
      }
      if (sizes.findIndex((s) => s.id === v.size.id) === -1) {
        sizes.push(v.size);
      }
    });

    setProductColors(colors);
    setProductSize(sizes);
  }, [product]);


  const handleVariants = (id : string, type : string) => {
    if(type === "color"){
      let index = availableSizes.indexOf(id);
      if(index !== -1) {
        let temp = availableSizes;
        temp.splice(index, 1)
        setAvailableSizes(temp);
      }
      product?.variants.forEach((v) => {
        if(v.color.id === id){
          setAvailableSizes((oldData) => [...oldData, v.size.id]);
        }
      })
    }
    if(type === "size") {
      let index = availableColors.indexOf(id);
      if(index !== -1){
        let temp = availableSizes;
        temp.splice(index, 1)
        setAvailableColors(temp);
      }
      product?.variants.forEach((v) => {
        if(v.size.id === id){
          setAvailableColors((oldData) => [...oldData, v.color.id]);
        }
      })
    }
  }

  console.log(availableColors);
  console.log(availableSizes);



  if (loading) {
    return <div>Loading...</div>
  } else {
    return (
      <>
        <Head>
          <title>{id}</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className="product-detail">
          <div className="container py-5">
            <div className="row">
              <div className="col-lg-5">
                <img src={`../${product?.detail.image}`} alt="" className="product-detail-image w-100" />
              </div>
              <div className="col-lg-7">
                <h3>{product?.detail.title}</h3>
                <p>{product?.detail.description}</p>
                <h5>{product?.detail.old_price} ₺</h5>
                <h5>{product?.detail.price} ₺</h5>
                <div className="colors">
                  {productColors?.map((color, index) => (
                    <div
                      key={color.id}
                      className="color"
                      style={{ backgroundColor: color.hexCode }}
                      title={color.name}
                      onClick={() => handleVariants(color.id, "color")}
                    ></div>
                  ))}
                </div>
                <div className="sizes">
                  {productSizes?.map((size, index) => (
                    <div
                      key={size.id}
                      className="size"
                      title={size.name}
                      onClick={() => handleVariants(size.id, "size")}
                    >{size.abbr}</div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      </>
    );

  }
}
